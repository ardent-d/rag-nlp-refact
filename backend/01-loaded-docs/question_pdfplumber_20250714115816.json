{
  "filename": "question.pdf",
  "total_chunks": 5,
  "total_pages": 5,
  "loading_method": "pdfplumber",
  "loading_strategy": null,
  "chunking_strategy": null,
  "chunking_method": "loaded",
  "timestamp": "2025-07-14T11:58:16.128386",
  "chunks": [
    {
      "content": "提问的智慧\n来源：https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.m\nd\nHow To Ask Questions The Smart Way\nCopyright © 2001,2006,2014 Eric S. Raymond, Rick Moen\n本指南英⽂版版权为 Eric S. Raymond, Rick Moen 所有。\n原⽂⽹址：http://www.catb.org/~esr/faqs/smart-questions.html\nCopyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu\n本中⽂指南是基于原⽂ 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译；\n协助指出翻译问题，请发 issue，或直接发 pull request 给我。\n本⽂另有繁體中⽂版。\n原⽂版本历史\n⽬录\n声明\n简介\n在提问之前\n当你提问时\n慎选提问的论坛\nStack Overflow\n⽹站和 IRC 论坛\n第⼆步，使⽤项⽬邮件列表\n使⽤有意义且描述明确的标题\n使问题容易回复\n使⽤清晰、正确、精准且合乎语法的语句\n使⽤易于读取且标准的⽂件格式发送问题\n精确地描述问题并⾔之有物\n话不在多⽽在精\n别动辄声称找到 Bug\n低声下⽓不能代替你的功课",
      "metadata": {
        "chunk_id": 1,
        "page_number": 1,
        "page_range": "1",
        "word_count": 72
      }
    },
    {
      "content": "描述问题症状⽽⾮你的猜测\n按发⽣时间先后列出问题症状\n描述⽬标⽽不是过程\n别要求使⽤私⼈电邮回复\n清楚明确地表达你的问题以及需求\n询问有关代码的问题时\n别把⾃⼰家庭作业的问题贴上来\n去掉⽆意义的提问句\n即使你很急也不要在标题写紧急\n礼多⼈不怪，⽽且有时还很有帮助\n问题解决后，加个简短的补充说明\n如何解读答案\nRTFM 和 STFW：如何知道你已完全搞砸了\n如果还是搞不懂\n处理⽆礼的回应\n如何避免扮演失败者\n不该问的问题\n好问题与蠢问题\n如果得不到回答\n如何更好地回答问题\n相关资源\n鸣谢\n声明\n许多项⽬在他们⽹站的帮助⽂档中链接了本指南。这很好，这正是我们想要的⽤途。但如果你是该项⽬管理员并试\n图创建指向本指南的超链接，请在超链接附近的显著位置注明：\n本指南不提供此项⽬的实际⽀持服务！\n我们已经深刻领教到缺少上述声明所带来的痛苦：我们将不停地被那些认为发布这本指南就意味着有责任解决世上\n所有技术问题的傻⽠苦苦纠缠。\n如果你因寻求某些帮助⽽阅读本指南，并在离开时还觉得可以从本⽂作者这⾥得到直接帮助，那你就是我们之前说\n的那些傻⽠之⼀。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件\n或硬件问题的⼈处取得协助，⽽ 99% 的情况下那不会是我们。除⾮你确定本指南的作者之⼀刚好是你所遇到的问\n题领域的专家，否则请不要打扰我们，这样⼤家都会开⼼⼀点。\n简介",
      "metadata": {
        "chunk_id": 2,
        "page_number": 2,
        "page_range": "2",
        "word_count": 37
      }
    },
    {
      "content": "在⿊客的世界⾥，你所提技术问题的解答的好坏, 很⼤程度上取决于你提问的⽅式与此问题的难度。本指南将教你\n如何正确地提问以获得你满意的答案。\n现在开源（Open Source）软件已经相当盛⾏，您通常可以从其他更有经验的⽤户那⾥获得与⿊客⼀样好的答案，\n这是件好事；和⿊客相⽐，⽤户们往往对那些新⼿常遇到的问题更宽容⼀些。尽管如此，以我们在此推荐的⽅式对\n待这些有经验的⽤户通常也是从他们那⾥获得有⽤答案的最有效⽅式。\n⾸先你应该明⽩，⿊客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并⾮如此，那我们也不会\n成为你想询问的对象。如果你给了我们⼀个值得反复咀嚼玩味的好问题，我们⾃会对你感激不尽。好问题是激励，\n是厚礼。好问题可以提⾼我们的理解⼒，⽽且通常会暴露我们以前从没意识到或者思考过的问题。对⿊客⽽⾔，\n“好问题！”是诚挚的⼤⼒称赞。\n尽管如此，⿊客们有着蔑视或傲慢⾯对简单问题的坏名声，这有时让我们看起来对新⼿、⽆知者似乎较有敌意，但\n其实不是那样的。\n我们不讳⾔我们对那些不愿思考、或者在发问前不做他们该做的事的⼈的蔑视。那些⼈是时间杀⼿ —— 他们只想\n索取，从不付出，消耗我们可⽤在更有趣的问题或更值得回答的⼈身上的时间。我们称这样的⼈为 失败者\n（loser） （由于历史原因，我们有时把它拼作 lusers）。\n我们意识到许多⼈只是想使⽤我们写的软件，他们对学习技术细节没有兴趣。对⼤多数⼈⽽⾔，电脑只是种⼯具，\n是种达到⽬的的⼿段⽽已。他们有⾃⼰的⽣活并且有更要紧的事要做。我们认可这点，也从不指望每个⼈都对这些\n让我们着迷的技术问题感兴趣。尽管如此，我们只为那些真正有兴趣并愿意积极参与问题解决的⼈调整回答问题的\n⻛格。这点不会变，也不该变：否则，我们就是在最擅⻓的事情上降低效率。\n我们（在很⼤程度上）是⾃愿的，从繁忙的⽣活中抽出时间来解答疑惑，⽽且时常被提问淹没。所以我们⽆情地滤\n掉⼀些话题，特别是拋弃那些看起来像失败者的家伙，以便更⾼效地利⽤时间来回答赢家（winner）的问题。\n如果你厌恶我们的态度，⾼⾼在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实\n上，我们⼤多数⼈⾮常乐意与你平等地交流，只要你付出⼩⼩努⼒来满⾜基本要求，我们就会欢迎你加⼊我们的⽂\n化。但让我们帮助那些不愿意帮助⾃⼰的⼈是没有效率的。⽆知没有关系，但装⽩痴就是不⾏。\n所以，你不必在技术上很在⾏才能吸引我们的注意，但你必须表现出能引导你变得在⾏的特质 —— 机敏、有想\n法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司\n签个技术⽀持服务合同，⽽不是要求⿊客个⼈⽆偿地帮助你。\n如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的⼀员。能⽴刻得到快速并有效答案\n的最好⽅法，就是像赢家那样提问 —— 聪明、⾃信、有解决问题的思路，只是偶尔在特定的问题上需要获得⼀点\n帮助。\n（欢迎对本指南提出改进意⻅。你可以把你的建议发送⾄ esr@thyrsus.com 或 respond-auto@linuxmafia.com。\n然⽽请注意，本⽂并⾮⽹络礼节的通⽤指南，⽽我们通常会拒绝⽆助于在技术论坛得到有⽤答案的建议）。\n在提问之前\n在你准备要通过电⼦邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：\n1. 尝试在你准备提问的论坛的旧⽂章中搜索答案。\n2. 尝试上⽹搜索以找到答案。\n3. 尝试阅读⼿册以找到答案。",
      "metadata": {
        "chunk_id": 3,
        "page_number": 3,
        "page_range": "3",
        "word_count": 55
      }
    },
    {
      "content": "4. 尝试阅读常⻅问题⽂件（FAQ）以找到答案。\n5. 尝试⾃⼰检查或试验以找到答案。\n6. 向你身边的强者朋友打听以找到答案。\n7. 如果你是程序开发者，请尝试阅读源代码以找到答案。\n当你提出问题的时候，请先表明你已经做了上述的努⼒；这将有助于树⽴你并不是⼀个不劳⽽获且浪费别⼈的时间\n的提问者。如果你能⼀并表达在做了上述努⼒的过程中所学到的东⻄会更好，因为我们更乐于回答那些表现出能从\n答案中学习的⼈的问题。\n运⽤某些策略，⽐如先⽤ Google 搜索你所遇到的各种错误信息（搜索 Google 论坛和⽹⻚），这样很可能直接就\n找到了能解决问题的⽂件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上⼀句 我在 Google\n中搜过下列句⼦但没有找到什么有⽤的东⻄ 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加\n上搜索过的字串）也让遇到相似问题的其他⼈能被搜索引擎引导到你的提问来。\n别着急，不要指望⼏秒钟的 Google 搜索就能解决⼀个复杂的问题。在向专家求助之前，再阅读⼀下常⻅问题⽂件\n（FAQ）、放轻松、坐得舒服⼀些，再花点时间思考⼀下这个问题。相信我们，他们能从你的提问看出你做了多少\n阅读与思考，如果你是有备⽽来，将更有可能得到解答。不要将所有问题⼀股脑拋出，只因你的第⼀次搜索没有找\n到答案（或者找到太多答案）。\n准备好你的问题，再将问题仔细地思考过⼀遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。\n越是能表现出在寻求帮助前你为解决问题所付出的努⼒，你越有可能得到实质性的帮助。\n⼩⼼别问错了问题。如果你的问题基于错误的假设，某个普通⿊客（J. Random Hacker）多半会⼀边在⼼⾥想着\n蠢问题…，⼀边⽤⽆意义的字⾯解释来答复你，希望着你会从问题的回答（⽽⾮你想得到的答案）中汲取教训。\n绝不要⾃以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务⽀付任何报酬。你将会是⾃⼰去挣到⼀个\n答案，靠提出有内涵的、有趣的、有思维激励作⽤的问题 —— ⼀个有潜⼒能贡献社区经验的问题，⽽不仅仅是被\n动地从他⼈处索取知识。\n另⼀⽅⾯，表明你愿意在找答案的过程中做点什么是⼀个⾮常好的开端。谁能给点提示？、我的这个例⼦⾥缺了什\n么？以及我应该检查什么地⽅⽐请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有⼈能指个正确\n⽅向，你就有完成它的能⼒和决⼼。\n当你提问时\n慎选提问的论坛\n⼩⼼选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：\n在与主题不合的论坛上贴出你的问题。\n在探讨进阶技术问题的论坛张贴⾮常初级的问题；反之亦然。\n在太多的不同新闻群组上重复转贴同样的问题（cross-post）。\n向既⾮熟⼈也没有义务解决你问题的⼈发送私⼈电邮。\n⿊客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被⽆关的东⻄淹没。你不会想让这种事发⽣在⾃⼰身\n上的。",
      "metadata": {
        "chunk_id": 4,
        "page_number": 4,
        "page_range": "4",
        "word_count": 51
      }
    },
    {
      "content": "因此，第⼀步是找到对的论坛。再说⼀次，Google 和其它搜索引擎还是你的朋友，⽤它们来找到与你遭遇到困难\n的软硬件问题最相关的⽹站。通常那⼉都有常⻅问题（FAQ）、邮件列表及相关说明⽂件的链接。如果你的努⼒\n（包括阅读 FAQ）都没有结果，⽹站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去\n看看。\n向陌⽣的⼈或论坛发送邮件最可能是⻛险最⼤的事情。举例来说，别假设⼀个提供丰富内容的⽹⻚的作者会想充当\n你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根\n别发。\n在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。\n发⽂前先翻翻已有的话题，这样可以让你感受⼀下那⾥的⽂化。事实上，事先在新闻组或邮件列表的历史记录中搜\n索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。\n别像机关枪似的⼀次“扫射”所有的帮助渠道，这就像⼤喊⼤叫⼀样会使⼈不快。要⼀个⼀个地来。\n搞清楚你的主题！最典型的错误之⼀是在某种致⼒于跨平台可移植的语⾔、套件或⼯具的论坛中提关于 Unix 或\nWindows 操作系统程序界⾯的问题。如果你不明⽩为什么这是⼤错，最好在搞清楚这之间差异之前什么也别问。\n⼀般来说，在仔细挑选的公共论坛中提问，会⽐在私有论坛中提同样的问题更容易得到有⽤的回答。有⼏个理由可\n以⽀持这点，⼀是看潜在的回复者有多少，⼆是看观众有多少。⿊客较愿意回答那些能帮助到许多⼈的问题。\n可以理解的是，⽼练的⿊客和⼀些热⻔软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草⼀\n样，你的加⼊也有可能使情况⾛向极端 —— 已经好⼏次了，⼀些热⻔软件的作者由于涌⼊其私⼈邮箱的⼤量不堪\n忍受的⽆⽤邮件⽽不再提供⽀持。\nStack Overflow\n搜索，然后在 Stack Exchange 问。\n近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项⽬。\n因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很⾼的⼏率某⼈已经问了⼀个类似\n的问题，⽽且 Stack Exchange ⽹站们往往会是搜索结果中最前⾯⼏个。如果你在 Google 上没有找到任何答案，\n你再到特定相关主题的⽹站去找。⽤标签（Tag）搜索能让你更缩⼩你的搜索结果。\n如果你还是找不到任何对你的问题有⽤的内容，请把你的问题发在与它最相关的⽹站上。提问的时候请善⽤格式化\n⼯具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语⾔、操作系统或库/包的名称）。当有⼈要\n求你提供更多相关信息时，请编辑你的贴⼦来补充它们[译注：⽽不是发⼀个回帖或回答！]。如果你觉得⼀个答案\n对你有帮助，点击向上的箭头来为它投票；如果⼀个答案提供了问题的正确解决⽅案，点击投票按钮下⽅的对勾来\n将它标记为正解。\nStack Exchange 已经成⻓到超过⼀百个⽹站，以下是最常⽤的⼏个站：\nSuper User 是问⼀些通⽤的电脑问题，如果你的问题跟代码或是写程序⽆关，只是⼀些⽹络连线之类的，请\n到这⾥。\nStack Overflow 是问写程序有关的问题。\nServer Fault 是问服务器和⽹管相关的问题。\n⽹站和 IRC 论坛",
      "metadata": {
        "chunk_id": 5,
        "page_number": 5,
        "page_range": "5",
        "word_count": 75
      }
    }
  ]
}